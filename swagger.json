{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Book to ride",
        "description": "Library API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/",
            "description": "Local Dev"
        }
    ],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        { "name": "Book", "description": "API for book" }
    ],
    "consumes": ["application/json"],
    "produces": ["application/json"],

    "paths": {
        "/book": {
            "get": {
                "tags": ["Books"],
                "summary": "Get all books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Books"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Book"],
                "summary": "Create a new book",
                "requestBody": {
                    "description": "Create book",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Book"
                            }
                        }
                    }
                },
                "produces": ["application/json"],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/book/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the cat that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": ["Books"],
                "summary": "Get book with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Book with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            },
            "put": {
                "summary": "Update book with given ID",
                "tags": ["Book"],
                "requestBody": {
                    "description": "Update book",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Book"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Book with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Book not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete book with given ID",
                "tags": ["Books"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Book with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Book not found."
                    }
                }
            }
        }
    },

    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "number"
                }
            }
        },
        "Book": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "releaseAt": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "fileUrl": {
                    "type": "string"
                },
                "approved": {
                    "type": "string"
                },
                "userId": {
                    "type": "number"
                },
                "categoryId": {
                    "type": "number"
                }
            }
        },
        "Books": {
          "type": "object",
          "properties": {
              "ticket": {
                  "type": "object",
                  "additionnalProperties": {
                      "$ref": "#/definitions/Book"
                  }
              }
          }
      }
    }
}
